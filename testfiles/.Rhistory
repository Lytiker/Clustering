daisy_csv=read_table('/media/anne/My Passport/python_files/small_daisymatrix.csv')
library(cluster)
library(readr)
library(gplots)
daisy_csv=read_table('/media/anne/My Passport/python_files/small_daisymatrix.csv')
df= as.matrix(daisy_csv)
df= scale(df)
heatmap<-heatmap(df, keep.dendro=TRUE)
daisy_csv=read_csv('/media/anne/My Passport/python_files/train_daisymatrix.csv')
daisy_csv=read_csv('/media/anne/My Passport/python_files/small_daisymatrix.csv')
df= as.matrix(daisy_csv[-1,])
View(daisy_csv)
View(df)
df= as.matrix(daisy_csv)
df= scale(df)
install.packages('raster')
install.packages('fastcluster')
install.packages("factoextra")
install.packages('dbscan')
library(dbscan)
library(devtools)
install_github("mhahsler/dbscan")
install.packages('dbscan')
library(ggplots)
install.packages('ggplots')
library(fpc)
install.packages('fpc')
library(ggplot2)
library(factoextra)
install.packages("factoextra")
install.packages("factoextra")
table_test=fread('/media/anne/My Passport/python_files/small_daisymatrix.csv')
library(data.table)
table_test=fread('/media/anne/My Passport/python_files/small_daisymatrix.csv')
dist=as.dist(table_test)
result=dbscan(dist, eps = 8, MinPts = 2)
library(dbscan)
result=dbscan(dist, eps = 8, MinPts = 2)
sil=silhouette(result$cluster, dist)
library(cluster)
sil=silhouette(result$cluster, dist)
library(ggplot2)
library(fpc)
library(lattice)
library(cluster)
library(readr)
library(raster)
library(ggplot2)
library(fpc)
library(fastcluster)
library(data.table)
library(dbscan)
library(lattice)
library(factoextra)
sil=silhouette(result$cluster, dist)
result=dbscan(dist, eps = 8, minPts = 2)
result=dbscan(dist, eps = 8, minPts = 3)
result=dbscan(dist, eps = 8)
sil=silhouette(result$cluster, dist)
plot(sil)
result=dbscan(dist, eps = 8, showplot = 1)
sil=silhouette(result$cluster, dist)
plot(sil)
dist=as.dist(table_test)
result=dbscan(dist, eps = 8, showplot = 1)
sil=silhouette(result$cluster, dist)
plot(sil)
window()
windows()
plot(sil)
summary(sil)
result=dbscan(dist, eps = 1, showplot = 1)
sil=silhouette(result$cluster, dist)
summary(sil)
plot(sil)
table=fread('/media/anne/My Passport/python_files/train_daisymatrix.csv')
dist=as.dist(table)
result=dbscan(dist, eps = 8, showplot = 1)
data=fread('/media/anne/My Passport/python_files/training/clustershtest.csv')
library(readr)
library(data.table)
data=fread('/media/anne/My Passport/python_files/training/clustershtest.csv')
View(data)
View(data)
View(data)
data=fread('/media/anne/My Passport/python_files/training/clustershtest.csv')
clusters=data$hypertools_Cluster
View(data)
fullframe=read_csv('/media/anne/My Passport/python_files/training/mi_trueattr.csv')
library(data.table)
fullframe=fread('/media/anne/My Passport/python_files/training/mi_trueattr.csv')
View(fullframe)
View(fullframe)
dataframe=head(fullframe,10)
dataframe$ID <- NULL
dataframe$Worst_diagnosis <- NULL
dataframe$true_labels <- NULL
dataframe$true_labels2 <- NULL
View(dataframe)
View(dataframe)
fullframe=fread('/media/anne/My Passport/python_files/training/mi_trueattr.csv')
dataframe=fullframe
dataframe=head(dataframe, n=1000)
dataframe$ID <- NULL
dataframe$Worst_diagnosis <- NULL
dataframe$true_labels <- NULL
dataframe$true_labels2 <- NULL
dataframe[, c(1:9,19:22,26, 37)] <- lapply(dataframe[, c(1:9,19:22,26, 37)], as.factor)
dataframe[, c(10:12,14,23:25)] <- lapply(dataframe[, c(10:12,14,23:25)], as.logical)
dataframe[, c(13,15:18,27:36)] <- lapply(dataframe[, c(13,15:18,27:36)], as.numeric)
str(dataframe)
daisymatrix = daisy(dataframe, metric='gower')
daisymatrix= as.matrix(daisymatrix)
library(readr)
library(cluster)
library(raster)
library(gplots)
library(fastcluster)
library(data.table)
library(grDevices)
library(Matrix)
daisymatrix = daisy(dataframe, metric='gower')
daisymatrix= as.matrix(daisymatrix)
write.table(val_daisymatrix, '/media/anne/My Passport/python_files/training/train_daisymatrix2.csv', sep=',', col.names= FALSE, row.names = FALSE,qmethod =  "double")
write.table(daisymatrix, '/media/anne/My Passport/python_files/training/train_daisymatrix2.csv', sep=',', col.names= FALSE, row.names = FALSE,qmethod =  "double")
df= scale(daisymatrix)
daisy_clust=cutree(hclust(dist(df)), k=3)
daisy_clust2=cutree(hclust(dist(df)), k=6)
dataframe$ID <- fullframe$ID
dataframe$Worst_diagnosis <- fullframe$Worst_diagnosis
dataframe$daisyclust=daisy_clust
dataframe$daisyclust2=daisy_clust2
View(dataframe)
write_csv(dataframe, '/media/anne/My Passport/python_files/val_daisycluster.csv')
library(data.table)
library(data.table)
system.time(fread('/media/anne/My Passport/python_files/training/train_daisymatrix2.csv'))
setwd("~/Documents/gitfolder/patternclustering/finishing/tomain/testfiles")
library(readr)
library(cluster)
library(raster)
library(gplots)
library(fastcluster)
library(data.table)
library(grDevices)
library(Matrix)
daisy=fread('../output/daisymatrix.csv') #distance matrix from daisy
matrix1=fread('../output/matrix1.csv') #distance matrix from cluster_programme
daisy=as.dist(daisy)
data1=fread('../output/kmeans.csv')
View(data1)
kmeans_dist=dist(data1)
data2=fread('../output/kproto.csv')
data3=fread('../output/daisycluster.csv')
data4=fread('../output/matrix1cluster.csv')
View(data2)
View(data3)
data3=fread('../output/daisycluster.csv', index=FALSE)
data3=fread('../output/daisycluster.csv', index=0)
data3=fread('../output/daisycluster.csv', drop=1)
View(data3)
data3=fread('../output/daisycluster.csv', drop=3)
data3=fread('../output/daisycluster.csv', drop=1:3)
View(data4)
data4=fread('../output/matrix1cluster.csv', drop=c(1:3,40:42)
length(daisy)
clusters1=data1$hypertools_Cluster
sil1=silhouette(clusters1, kmeans_dist)
clusters2=data2$kproto_cluster
sil2=silhouette(clusters2, daisy)
clusters3=data3$daisycluster
sil3=silhouette(clusters3, daisy)
clusters4=data4$matrix1cluster
sil4=silhouette(clusters4, matrix1)
#x11()
pdf('../output/silplot.pdf')
plot(sil1, main='silhouetteplot for k-means with daisymatrix measure')
#plot(sil2, main='silhouetteplot for k-prototype with daisymatrix measure')
#plot(sil3, main='silhouetteplot for hierarchial clustering from daisymatrix')
#plot(sil4, main='silhouetteplot for hierarchial clustering from matrix1')
dev.off()
data4=fread('../output/matrix1cluster.csv', drop=c(1:3,40:42))
data3=fread('../output/daisycluster.csv', drop=1:3,40:42)
data3=fread('../output/daisycluster.csv', drop=c(1:3,40:42))
data3=fread('../output/daisycluster.csv')
data3=fread('../output/daisycluster.csv', drop=1)
data3$ID=NULL
data3$Worst_diagnosis=0
data3$Worst_diagnosis=NULL
data3$true_labels=NULL
daisy=fread('../output/daisymatrix.csv') #distance matrix from daisy
matrix1=fread('../output/matrix1.csv') #distance matrix from cluster_programme
daisy=as.dist(daisy)
matrix1=as.dist(matrix1)
data1=fread('../output/kmeans.csv')
kmeans_dist=dist(data1)
data2=fread('../output/kproto.csv')
data2$ID=NULL
data2$Worst_diagnosis=NULL
data3=fread('../output/daisycluster.csv', drop=1)
View(data2)
clusters2=data2$kproto_cluster
data2$ID=NULL
data2$Worst_diagnosis=NULL
data2$kproto_cluster=NULL
clusters3=data3$daisycluster
clusters3=data3$daisycluster
data3$daisycluster=NULL
data3$ID=NULL
data3$Worst_diagnosis=NULL
data3$true_labels=NULL
data3$true_labels2=NULL
data4=fread('../output/matrix1cluster.csv', drop=1)
clusters4=data4$matrix1cluster
data4$matrix1cluster=NULL
data4$ID=NULL
data4$Worst_diagnosis=NULL
data4$true_labels=NULL
data4$true_labels2=NULL
sil1=silhouette(clusters1, kmeans_dist)
sil2=silhouette(clusters2, daisy)
clusters1=data1$hypertools_Cluster
data1$hypertools_Cluster=NULL
kmeans_dist=dist(data1)
sil1=silhouette(clusters1, kmeans_dist)
sil2=silhouette(clusters2, daisy)
sil3=silhouette(clusters3, daisy)
sil4=silhouette(clusters4, matrix1)
plot(sil1, main='silhouetteplot for k-means with daisymatrix measure')
plot(sil2, main='silhouetteplot for k-prototype with daisymatrix measure')
plot(sil3, main='silhouetteplot for hierarchial clustering from daisymatrix')
plot(sil4, main='silhouetteplot for hierarchial clustering from matrix1')
View(data1)
daisy=fread('../output/daisymatrix.csv') #distance matrix from daisy
View(daisy)
library(readr)
library(cluster)
library(raster)
library(gplots)
library(fastcluster)
library(data.table)
library(grDevices)
library(Matrix)
daisy=fread('../output/daisymatrix.csv') #distance matrix from daisy
matrix1=fread('../output/matrix1.csv') #distance matrix from cluster_programme
daisy=as.dist(daisy)
matrix1=as.dist(matrix1)
#due to OneHotencoding with k-means a separate distance measure is made
data1=fread('../output/kmeans.csv')
clusters1=data1$hypertools_Cluster
data1$hypertools_Cluster=NULL
#prepare data from kproto clustering
data2=fread('../output/kproto.csv')
clusters2=data2$kproto_cluster
#same for hierarchical clustering of daisymatrix
data3=fread('../output/daisycluster.csv', drop=1)
clusters3=data3$daisycluster
#and finally prepare dataset from hierarchical clustering of matrix1
data4=fread('../output/matrix1cluster.csv', drop=1)
clusters4=data4$matrix1cluster
sil1=silhouette(clusters1, daisy)
sil2=silhouette(clusters2, daisy)
sil3=silhouette(clusters3, daisy)
sil4=silhouette(clusters4, matrix1)
#x11()
pdf('../output/silplot.pdf')
#plot(sil1, main='silhouetteplot for k-means with daisymatrix measure')
plot(sil2, main='silhouetteplot for k-prototype with daisymatrix measure')
plot(sil3, main='silhouetteplot for hierarchial clustering from daisymatrix')
plot(sil4, main='silhouetteplot for hierarchial clustering from matrix1')
dev.off()
plot(sil1, main='silhouetteplot for k-means with daisymatrix measure')
data=fread('../ouput/new_attr.csv')
library(data.table)
data=fread('../ouput/new_attr.csv')
library(mlbench)
library(data.table)
data=fread('../ouput/new_attr.csv')
setwd("~/Documents/gitfolder/patternclustering/finishing/tomain/testfiles")
data=fread('../ouput/new_attr.csv')
pdf(' .. / output/barplots_data.pdf ')
pdf(' .. /output/barplots_data.pdf ')
pdf(' ../output/barplots_data.pdf ')
pdf(' ../output/barplots_data.pdf')
pdf('../output/barplots_data.pdf')
data=fread('../ouput/new_attr.csv')
data=fread(' ../ouput/new_attr.csv')
dev.off()
data=fread('/ouput/new_attr.csv')
data=fread("/ouput/new_attr.csv")
data=fread("../ouput/new_attr.csv")
data=fread("../ouput/new_attr.csv")
daisy=fread('../output/daisymatrix.csv')
daisy=fread('../output/new_attr.csv')
data=fread('../output/new_attr.csv')
View(data)
data=fread('../output/new_attr.csv', row.names=0)
data=fread('../output/new_attr.csv', rownames=NULL)
data=fread('../output/new_attr.csv', rownames=0)
data=fread('../output/new_attr.csv', rownames=FALSE)
data=fread('../output/new_attr.csv', index=FALSE)
data=fread('../output/new_attr.csv', drop=1)
View(data)
data=fread('../output/new_attr.csv', drop=1:2)
library(mlbench)
library(data.table)
data=fread('../output/new_attr.csv', drop=1:2)
par(mfrow=c(1,4))
#x11()
pdf('../output/barplots_data.pdf')
for(i in 1:40){
counts = table(data[,i, with=FALSE])
name = names(data)[i]
barplot(counts, main=name)
}
dev.off()
#create barplot of variables on one of the hypertools clusters
out=split(data, data$hypertools_Cluster)
cluster1=out[[1]]
#pdf('../ouput/clust1hyp.pdf')
for(i in 1:40){
counts = table(cluster1[,i, with=FALSE])
name = names(cluster1)[i]
barplot(counts, main=name)
}
dev.off()
data2=fread('../output/kmeans.csv', drop=1:2)
View(data2)
View(data2)
library(mlbench)
library(data.table)
data=fread('../output/new_attr.csv', drop=1:2)
par(mfrow=c(1,4))
#x11()
pdf('../output/barplots_data.pdf')
for(i in 1:40){
counts = table(data[,i, with=FALSE])
name = names(data)[i]
barplot(counts, main=name)
}
dev.off()
#create barplot of variables on one of the hypertools clusters
data2=fread('../output/kmeans.csv', drop=1:2)
out=split(data2, data$hypertools_Cluster)
cluster1=out[[1]]
#pdf('../ouput/clust1hyp.pdf')
for(i in 1:40){
counts = table(cluster1[,i, with=FALSE])
name = names(cluster1)[i]
barplot(counts, main=name)
}
dev.off()
cluster1=out[[1]]
out=split(data2, data$hypertools_Cluster)
out=split(data2, data2$hypertools_Cluster)
cluster1=out[[1]]
library(mlbench)
library(data.table)
data=fread('../output/new_attr.csv', drop=1:2)
par(mfrow=c(1,4))
#x11()
pdf('../output/barplots_data.pdf')
for(i in 1:40){
counts = table(data[,i, with=FALSE])
name = names(data)[i]
barplot(counts, main=name)
}
dev.off()
#create barplot of variables on one of the hypertools clusters
data2=fread('../output/kmeans.csv', drop=1:2)
out=split(data2, data2$hypertools_Cluster)
cluster1=out[[1]]
#pdf('../ouput/clust1hyp.pdf')
for(i in 1:40){
counts = table(cluster1[,i, with=FALSE])
name = names(cluster1)[i]
barplot(counts, main=name)
}
dev.off()
pdf('../ouput/clust1hyp.pdf')
pdf('../output/barplots_data.pdf')
dev.off()
dev.off()
library(data.table)
kmeans=fread('/media/anne/My Passport/python_files/training/37 variables/clustersh_k3.csv')
train=fread('/media/anne/My Passport/python_files/training/37 variables/mi_trueattr.csv')
par(mfrow=c(1,2))
pdf('/media/anne/My Passport/python_files/training/37 variables/barplt_training.pdf')
for(i in 1:46){
counts = table(train[,i, with=FALSE])
name = names(train)[i]
barplot(counts, main=name)
}
View(train)
train$kmeansclusters=kmeans$hypertools_Cluster
